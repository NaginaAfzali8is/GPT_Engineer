To create a simple coffee shop application, we will need the following core classes and functions:

1. `Product`: Represents a product (like coffee, tea, etc.) sold in the coffee shop.
2. `Order`: Represents a customer's order, which contains multiple products.
3. `Inventory`: Manages the stock of products available in the coffee shop.
4. `CashRegister`: Processes payments and transactions.
5. `Menu`: Displays available products and prices.
6. `CoffeeShop`: The main class that integrates all components.

Let's start by creating the entry point of the application, which will be `main.py`. This file will initialize a `CoffeeShop` instance and start the application.

main.py
```python
from coffee_shop import CoffeeShop

def main():
    shop = CoffeeShop()
    shop.open_shop()

if __name__ == "__main__":
    main()
```

Now, let's define the `CoffeeShop` class in `coffee_shop.py`.

coffee_shop.py
```python
from inventory import Inventory
from cash_register import CashRegister
from menu import Menu

class CoffeeShop:
    def __init__(self):
        self.inventory = Inventory()
        self.cash_register = CashRegister()
        self.menu = Menu(self.inventory)

    def open_shop(self):
        # This method would contain the logic to start the shop operations
        print("Coffee Shop is now open!")
        self.menu.display_menu()
```

Next, we'll create the `Inventory` class in `inventory.py`.

inventory.py
```python
from product import Product

class Inventory:
    def __init__(self):
        self.products = {
            'coffee': Product('coffee', 2.5, 10),
            'tea': Product('tea', 2.0, 10)
        }

    def check_stock(self, product_name):
        return self.products[product_name].quantity > 0

    def reduce_stock(self, product_name):
        if self.check_stock(product_name):
            self.products[product_name].quantity -= 1
```

The `Product` class in `product.py`.

product.py
```python
from dataclasses import dataclass

@dataclass
class Product:
    name: str
    price: float
    quantity: int
```

The `CashRegister` class in `cash_register.py`.

cash_register.py
```python
class CashRegister:
    def __init__(self):
        self.total_sales = 0.0

    def process_payment(self, amount):
        self.total_sales += amount
        print(f"Payment processed: ${amount:.2f}")
```

The `Menu` class in `menu.py`.

menu.py
```python
class Menu:
    def __init__(self, inventory):
        self.inventory = inventory

    def display_menu(self):
        for product_name, product in self.inventory.products.items():
            if self.inventory.check_stock(product_name):
                print(f"{product_name.title()}: ${product.price:.2f}")
```

Lastly, we need to create a `requirements.txt` file to list all the dependencies.

requirements.txt
```
# No external dependencies are used in this simple implementation
```

This concludes a fully working implementation.